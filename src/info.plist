<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
  <dict>
    <key>bundleid</key>
    <string>com.alfredapp.zzkkyys.searchObsidianNotes</string>
    <key>category</key>
    <string/>
    <key>connections</key>
    <dict>
      <key>90A135F4-67BC-418F-BBF4-D52020645A68</key>
      <array>
        <dict>
          <key>destinationuid</key>
          <string>E7E04034-9856-49E9-90C9-ACB514224AA2</string>
          <key>modifiers</key>
          <integer>0</integer>
          <key>modifiersubtext</key>
          <string/>
          <key>vitoclose</key>
          <false/>
        </dict>
      </array>
      <key>E7E04034-9856-49E9-90C9-ACB514224AA2</key>
      <array>
        <dict>
          <key>destinationuid</key>
          <string>F7C2F4E7-5AFA-46E5-BB9F-D6A8887ADFDD</string>
          <key>modifiers</key>
          <integer>0</integer>
          <key>modifiersubtext</key>
          <string/>
          <key>vitoclose</key>
          <false/>
        </dict>
      </array>
      <key>F7C2F4E7-5AFA-46E5-BB9F-D6A8887ADFDD</key>
      <array/>
    </dict>
    <key>createdby</key>
    <string>zzkkyys</string>
    <key>description</key>
    <string>Search Obsidian Notes using Omnisearch</string>
    <key>disabled</key>
    <false/>
    <key>name</key>
    <string>Search Obsidian Notes</string>
    <key>objects</key>
    <array>
      <dict>
        <key>config</key>
        <dict>
          <key>action</key>
          <integer>0</integer>
          <key>argument</key>
          <integer>0</integer>
          <key>focusedappvariable</key>
          <false/>
          <key>focusedappvariablename</key>
          <string/>
          <key>hotkey</key>
          <integer>31</integer>
          <key>hotmod</key>
          <integer>1703936</integer>
          <key>hotstring</key>
          <string>O</string>
          <key>leftcursor</key>
          <false/>
          <key>modsmode</key>
          <integer>0</integer>
          <key>relatedAppsMode</key>
          <integer>0</integer>
        </dict>
        <key>type</key>
        <string>alfred.workflow.trigger.hotkey</string>
        <key>uid</key>
        <string>90A135F4-67BC-418F-BBF4-D52020645A68</string>
        <key>version</key>
        <integer>2</integer>
      </dict>
      <dict>
        <key>config</key>
        <dict>
          <key>alfredfiltersresults</key>
          <false/>
          <key>alfredfiltersresultsmatchmode</key>
          <integer>0</integer>
          <key>argumenttreatemptyqueryasnil</key>
          <true/>
          <key>argumenttrimmode</key>
          <integer>0</integer>
          <key>argumenttype</key>
          <integer>2</integer>
          <key>escaping</key>
          <integer>102</integer>
          <key>keyword</key>
          <string>obsidian-search</string>
          <key>queuedelaycustom</key>
          <integer>3</integer>
          <key>queuedelayimmediatelyinitially</key>
          <true/>
          <key>queuedelaymode</key>
          <integer>0</integer>
          <key>queuemode</key>
          <integer>1</integer>
          <key>runningsubtext</key>
          <string/>
          <key>script</key>
          <string>#!/bin/bash

# Get the PYTHON_PATHS variable from Alfred
IFS=':' read -r -a paths &lt;&lt;&lt; "$PYTHON_PATHS"

# Check each path and find the first valid one
for path in "${paths[@]}"; do
    if [ -x "$path" ]; then
        # Run the Python script with the valid path
        "$path" main.py --query '{query}'
        exit 0
    fi
done

# If no valid Python path is found, print an error and exit
echo "Error: No valid Python path found in PYTHON_PATHS." &gt;&amp;2
exit 1

</string>
          <key>scriptargtype</key>
          <integer>0</integer>
          <key>scriptfile</key>
          <string/>
          <key>subtext</key>
          <string>Please install omni-search plugin in obsidian</string>
          <key>title</key>
          <string>search in obsidian.....</string>
          <key>type</key>
          <integer>0</integer>
          <key>withspace</key>
          <false/>
        </dict>
        <key>type</key>
        <string>alfred.workflow.input.scriptfilter</string>
        <key>uid</key>
        <string>E7E04034-9856-49E9-90C9-ACB514224AA2</string>
        <key>version</key>
        <integer>3</integer>
      </dict>
      <dict>
        <key>config</key>
        <dict>
          <key>concurrently</key>
          <false/>
          <key>escaping</key>
          <integer>0</integer>
          <key>script</key>
          <string>#!/bin/bash

# Get the PYTHON_PATHS variable from Alfred
IFS=':' read -r -a paths &lt;&lt;&lt; "$PYTHON_PATHS"

# Check each path and find the first valid one
for path in "${paths[@]}"; do
    if [ -x "$path" ]; then
        # Run the Python script with the valid path
        "$path" open.py --arg "{query}"
        exit 0
    fi
done

# If no valid Python path is found, print an error and exit
echo "Error: No valid Python path found in PYTHON_PATHS." &gt;&amp;2
exit 1</string>
          <key>scriptargtype</key>
          <integer>0</integer>
          <key>scriptfile</key>
          <string/>
          <key>type</key>
          <integer>0</integer>
        </dict>
        <key>type</key>
        <string>alfred.workflow.action.script</string>
        <key>uid</key>
        <string>F7C2F4E7-5AFA-46E5-BB9F-D6A8887ADFDD</string>
        <key>version</key>
        <integer>2</integer>
      </dict>
    </array>
    <key>readme</key>
    <string># Alfred Obsidian Search Workflow

An Alfred Workflow for quick searching, previewing, and opening Obsidian notes.

## Features

- üîç Multi-vault search support
- üìù Real-time Markdown preview
- üìä Math formula rendering
- üé® Beautiful search results display
- ‚ö° Fast response


## Requirements

- [Alfred 4+](https://www.alfredapp.com/)
- [Obsidian](https://obsidian.md/)
    - You must install the OmniSearch plugin, and open its HTTP server
    ![](imgs/obsidian-monisearch.png)
- Python packages
    - you have to install the following packages in your python environment
        ```bash
        pip install requests aiohttp aiofiles
        ```

## Installation

1. Download the latest `.alfredworkflow` file
2. Double-click to install in Alfred
3. Configure Obsidian search ports in Alfred preferences
4. Ensure Obsidian search service is running

## Usage

1. Press `‚å• + Space` to open Alfred
2. Type `obs` to trigger search
3. Enter search keywords
4. Use `‚åò + L` to preview search results
5. Press `Enter` to open file in Obsidian

## Configuration

### Environment Variables

- `alfred_workflow_cache`: Alfred workflow cache directory
- `query_ports`: Obsidian search service ports, comma-separated for multiple ports

### Search Service

Ensure Obsidian search service is running on:
- Default port: `27123`
- Configurable for multiple ports

## Technical Implementation

- Python for search request handling
- Marked.js for Markdown rendering
- MathJax for math formula rendering
- Mermaid.js for diagram rendering
- Local JavaScript library caching for performance

## Troubleshooting

### No Search Results
- Check if Obsidian search service is running
- Verify port configuration
- Validate vault paths

### Preview Not Displaying
- Check network connection
- Verify JavaScript libraries are downloaded correctly
- Check Alfred workflow logs

## Changelog

### v1.0.0
- Initial release
- Basic search functionality
- Markdown preview support

</string>
    <key>uidata</key>
    <dict>
      <key>90A135F4-67BC-418F-BBF4-D52020645A68</key>
      <dict>
        <key>xpos</key>
        <integer>170</integer>
        <key>ypos</key>
        <integer>170</integer>
      </dict>
      <key>E7E04034-9856-49E9-90C9-ACB514224AA2</key>
      <dict>
        <key>xpos</key>
        <integer>390</integer>
        <key>ypos</key>
        <integer>170</integer>
      </dict>
      <key>F7C2F4E7-5AFA-46E5-BB9F-D6A8887ADFDD</key>
      <dict>
        <key>xpos</key>
        <integer>625</integer>
        <key>ypos</key>
        <integer>170</integer>
      </dict>
    </dict>
    <key>userconfigurationconfig</key>
    <array/>
    <key>variables</key>
    <dict>
      <key>PYTHON_PATHS</key>
      <string>/Volumes/GEIL2T/Softwares/anaconda3/bin/python:/Users/ay/SoftwareData/anaconda/anaconda3/envs/torch/bin/python:/opt/homebrew/anaconda3/bin/python</string>
      <key>query_ports</key>
      <string>51361,51362</string>
    </dict>
    <key>variablesdontexport</key>
    <array>
      <string>query_ports</string>
      <string>PYTHON_PATHS</string>
    </array>
    <key>version</key>
    <string>1.21</string>
    <key>webaddress</key>
    <string>https://www.alfredapp.com</string>
  </dict>
</plist>